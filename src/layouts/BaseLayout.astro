---
import "@/styles/globals.css";
import Header from "@/components/Header.astro";
/**
 * サイト共通レイアウト
 * - `<Header />` を含むページのベース枠
 * - `title`/`description` は `<head>` に反映
 */
const {
  title = "まちゅダイアリー",
  description = "tDiaryから移行したAstroブログ",
  image,
  ogType = "website",
} = Astro.props as {
  title?: string;
  description?: string;
  image?: string; // OGP/Twitter用の画像（絶対/相対どちらでも）
  ogType?: "website" | "article";
};

// OGP用URL/画像の解決
// 優先順: `astro.config.mjs` の `site` → `PUBLIC_SITE_URL` → `Astro.url` の origin（開発/プレビュー時）
const SITE_ORIGIN: string | undefined =
  (Astro.site && Astro.site.origin) ||
  (import.meta as any).env?.PUBLIC_SITE_URL ||
  (Astro.url ? Astro.url.origin : undefined);

const currentPath = Astro.url?.pathname ?? "/";
const canonical = SITE_ORIGIN
  ? new URL(currentPath, SITE_ORIGIN).href
  : Astro.url?.href ?? undefined;

const rawImage = image ?? "/avatar.jpg"; // 既定はサイトのアバター
const ogImage = (() => {
  try {
    // 絶対URLならそのまま、相対ならオリジンがあれば絶対化
    if (/^https?:\/\//i.test(rawImage)) return rawImage;
    return SITE_ORIGIN
      ? new URL(rawImage.startsWith("/") ? rawImage : `/${rawImage}`, SITE_ORIGIN).href
      : rawImage; // 最後の手段として相対のまま
  } catch {
    return rawImage;
  }
})();
const siteName = "まちゅダイアリー";
---
<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    {canonical && <link rel="canonical" href={canonical} />}

    <!-- Open Graph -->
    <meta property="og:site_name" content={siteName} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={ogType} />
    {canonical && <meta property="og:url" content={canonical} />}
    <meta property="og:image" content={ogImage} />

    <!-- Twitter Cards -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <!-- Font Awesome (icons) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />
    <!-- Theme init: avoid flash by applying .dark early -->
    <script is:inline>
      (function () {
        try {
          var stored = localStorage.getItem('theme');
          var prefers = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          if (stored === 'dark' || (!stored && prefers)) {
            document.documentElement.classList.add('dark');
          }
        } catch (_) {}
      })();
    </script>
  </head>
  <body class="min-h-screen bg-background text-foreground">
    <Header />
    <main class="container py-6">
      <slot />
    </main>
  </body>
  
</html>
