---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getAllPosts } from "@/lib/posts";
import { normalizeTag } from "@/lib/tags";
import { buildEntryUrl, toDisplayDate } from "@/lib/dates";
import PostCard from "@/components/PostCard.astro";

/**
 * タグ詳細ページ（/tags/:tag）
 * - タグは normalizeTag でトリム＋小文字化したスラグ
 * - getStaticPaths で全投稿からタグ集合を構築
 */
export async function getStaticPaths() {
  const all = await getAllPosts();
  const tags = new Set<string>();
  for (const p of all) for (const t of p.data.tags ?? []) tags.add(normalizeTag(t));
  return Array.from(tags).map((t) => ({ params: { tag: t } }));
}

/** ルートパラメータのタグを正規化し、該当エントリを最新順で抽出 */
const tag = normalizeTag(Astro.params.tag!);
const posts = (await getAllPosts({
  predicate: (p) => (p.data.tags ?? []).some((t) => normalizeTag(t) === tag),
}))
  .toSorted((a, b) => +b.data.date - +a.data.date);

// date helpers are provided by @/lib/dates
---
<BaseLayout title={`タグ: ${tag}`} description={`タグ「${tag}」の記事一覧`}>
  <h1 class="mb-4 text-xl font-semibold">タグ: {tag}</h1>
  <ul class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
    {posts.map((entry) => {
      const dateDisplay = toDisplayDate(entry.data.date);
      const url = buildEntryUrl(entry.data.date, entry.slug);
      return (
        <PostCard
          title={entry.data.title}
          url={url}
          dateDisplay={dateDisplay}
          tags={entry.data.tags ?? []}
          description={entry.data.description}
          image={entry.data.image}
          body={entry.body}
        />
      );
    })}
  </ul>
</BaseLayout>
