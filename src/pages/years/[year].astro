---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { buildEntryUrl, groupByDateYmd, ymdToDisplay } from "@/lib/dates";
import { normalizeTag } from "@/lib/tags";

export async function getStaticPaths() {
  const all = await getCollection("posts");
  const ys = new Set<number>();
  for (const p of all) ys.add(p.data.date.getFullYear());
  return Array.from(ys).map((y) => ({ params: { year: String(y) } }));
}

const year = Number(Astro.params.year);
const all = await getCollection("posts");
const inYear = all.filter((p) => p.data.date.getFullYear() === year);

// Group by YYYYMMDD for this year
const byDate = groupByDateYmd(inYear);
const days = Array.from(byDate.entries()).toSorted((a, b) => b[0].localeCompare(a[0]));
---
<BaseLayout title={`${year}年のアーカイブ`}>
  <h1 class="mb-4 text-xl font-semibold">{year}年のアーカイブ</h1>
  <ul class="space-y-6">
    {days.map(([d, list]) => (
      <li>
        <h2 class="mb-1 text-base font-medium">
          {(() => { const disp = ymdToDisplay(d); return (
            <a href={`/posts/${d}/`} class="hover:underline">{disp}</a>
          ); })()}
          <span class="ml-2 text-xs text-muted-foreground">{list.length}件</span>
        </h2>
        <ul class="ml-4 space-y-1">
          {list
            .toSorted((a, b) => a.slug.localeCompare(b.slug))
            .map((entry) => {
              const url = buildEntryUrl(entry.data.date, entry.slug);
              const tags = entry.data.tags ?? [];
              return (
                <li class="text-sm">
                  <a href={url} class="hover:underline">{entry.data.title}</a>
                  {tags.length > 0 && (
                    <span class="ml-2 inline-flex flex-wrap gap-1 align-middle">
                      {tags.map((t) => (
                        <a
                          href={`/tags/${encodeURIComponent(normalizeTag(t))}`}
                          class="inline-flex items-center rounded-full border bg-muted px-2 py-0.5 text-xs text-muted-foreground hover:bg-muted/80"
                          >#{t}</a
                        >
                      ))}
                    </span>
                  )}
                </li>
              );
            })}
        </ul>
      </li>
    ))}
  </ul>
</BaseLayout>
