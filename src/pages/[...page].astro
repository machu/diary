---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const all = await getCollection("posts");
  // Sort newest first by frontmatter date
  const posts = all.toSorted((a, b) => +b.data.date - +a.data.date);
  const pageSize = 30;
  const pages = Math.max(1, Math.ceil(posts.length / pageSize));
  return Array.from({ length: pages }, (_, i) => ({
    // For catch-all routes, params values must be string/number/undefined
    // Use undefined for root ("/") and a string like "2" for "/2"
    params: { page: i === 0 ? undefined : String(i + 1) },
    props: {
      pageNum: i + 1,
      pageSize,
      total: posts.length,
      slice: posts.slice(i * pageSize, (i + 1) * pageSize),
    },
  }));
}

const { pageNum, pageSize, total, slice } = Astro.props as {
  pageNum: number;
  pageSize: number;
  total: number;
  slice: Awaited<ReturnType<typeof getCollection>>;
};

const yyyymmdd = (d: Date) => {
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, "0");
  const day = String(d.getDate()).padStart(2, "0");
  return `${y}${m}${day}`;
};
const yyyy_mm_dd = (d: Date) => {
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, "0");
  const day = String(d.getDate()).padStart(2, "0");
  return `${y}-${m}-${day}`;
};
---
<BaseLayout title="まちゅダイアリー" description="最新エントリ">
  <h1 class="mb-4 text-xl font-semibold">最新エントリ</h1>
  <ul class="space-y-4">
    {slice.map((entry) => {
      const slug = entry.slug.split("/").pop()!; // e.g. 20040927p03
      const dateYmd = yyyymmdd(entry.data.date);
      const dateDisplay = yyyy_mm_dd(entry.data.date);
      const part = slug.slice(8); // p03
      const url = `/posts/${dateYmd}/${part}`;
      const tags = entry.data.tags ?? [];
      return (
        <li>
          <div class="flex items-center justify-between gap-2">
            <a href={url} class="min-w-0 flex-1 hover:underline">
              <h2 class="truncate font-medium">{entry.data.title}</h2>
            </a>
            {tags.length > 0 && (
              <div class="shrink-0 flex flex-wrap gap-1 justify-end">
                {tags.map((t) => (
                  <a
                    href={`/tags/${encodeURIComponent(t.toLowerCase())}`}
                    class="inline-flex items-center rounded-full border bg-muted px-2 py-0.5 text-xs text-muted-foreground hover:bg-muted/80"
                    >#{t}</a
                  >
                ))}
              </div>
            )}
          </div>
          <p class="mt-1 text-xs text-muted-foreground">{dateDisplay}</p>
        </li>
      );
    })}
  </ul>

  <nav class="mt-8 flex items-center justify-between text-sm">
    {pageNum > 1 ? (
      <a href={pageNum === 2 ? "/" : `/${pageNum - 1}`} class="hover:underline">← 前のページ</a>
    ) : <span />}
    <span>Page {pageNum} / {Math.max(1, Math.ceil(total / pageSize))}</span>
    {pageNum * pageSize < total ? (
      <a href={`/${pageNum + 1}`} class="hover:underline">次のページ →</a>
    ) : <span />}
  </nav>
</BaseLayout>
