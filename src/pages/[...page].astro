---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { buildEntryUrl, toDisplayDate } from "@/lib/dates";
import { PAGE_SIZE } from "@/lib/constants";
import TagBadges from "@/components/TagBadges.astro";
import PostCard from "@/components/PostCard.astro";

/**
 * トップページ（最新エントリのページネーション）
 * - getStaticPaths で全投稿を最新順に分割し、"/", "/2" ... の静的パスを生成
 * - 1ページあたりの件数は `PAGE_SIZE` を参照
 */
export async function getStaticPaths() {
  const all = await getCollection("posts");
  // Sort newest first by frontmatter date
  const posts = all.toSorted((a, b) => +b.data.date - +a.data.date);
  const pageSize = PAGE_SIZE;
  const pages = Math.max(1, Math.ceil(posts.length / PAGE_SIZE));
  return Array.from({ length: pages }, (_, i) => ({
    // For catch-all routes, params values must be string/number/undefined
    // Use undefined for root ("/") and a string like "2" for "/2"
    params: { page: i === 0 ? undefined : String(i + 1) },
    props: {
      pageNum: i + 1,
      pageSize: PAGE_SIZE,
      total: posts.length,
      slice: posts.slice(i * PAGE_SIZE, (i + 1) * PAGE_SIZE),
    },
  }));
}

/** ページテンプレートへ渡されるプロパティ */
const { pageNum, pageSize, total, slice } = Astro.props as {
  pageNum: number;
  pageSize: number;
  total: number;
  slice: Awaited<ReturnType<typeof getCollection>>;
};

// common date helpers are provided by @/lib/dates
---

<BaseLayout title="まちゅダイアリー" description="最新エントリ">
  {
    pageNum === 1 ? (
      <section class="mb-8 text-center">
        <h1 class="text-3xl font-extrabold tracking-tight sm:text-4xl">
          まちゅダイアリー
        </h1>
        <div class="mt-4 flex justify-center">
          <div class="flex h-20 w-20 items-center justify-center overflow-hidden rounded-full bg-muted ring-1 ring-border">
            <img
              src="/avatar.jpg"
              alt="サイトアイコン"
              class="h-full w-full object-cover"
              loading="lazy"
            />
          </div>
        </div>
        <p class="mt-4 text-base text-muted-foreground">
          RubyやLinuxなど、興味のあることについて
        </p>
        <div class="mt-2 flex items-center justify-center gap-4 text-foreground">
          <a
            href="https://github.com/machu"
            class="inline-flex items-center gap-2 text-xs hover:underline"
            aria-label="GitHub"
          >
            <i class="fa-brands fa-github text-xl" />
          </a>
          <a
            href="https://x.com/machu"
            class="inline-flex items-center gap-2 text-xs hover:underline"
            aria-label="X"
          >
            <i class="fa-brands fa-x-twitter text-xl" />
          </a>
        </div>
        <div class="mt-8 border-t" />
      </section>
    ) : (
      <h1 class="mb-4 text-xl font-semibold">最新エントリ</h1>
    )
  }

  <ul class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
    {
      slice.map((entry) => {
        const dateDisplay = toDisplayDate(entry.data.date);
        const url = buildEntryUrl(entry.data.date, entry.slug);
        return (
        <PostCard
          title={entry.data.title}
          url={url}
          dateDisplay={dateDisplay}
          tags={entry.data.tags ?? []}
          description={entry.data.description}
          image={entry.data.image}
          body={entry.body}
        />
        );
      })
    }
  </ul>

  <nav class="mt-8 flex items-center justify-between text-sm">
    {
      pageNum > 1 ? (
        <a
          href={pageNum === 2 ? "/" : `/${pageNum - 1}`}
          class="inline-flex items-center rounded-md border bg-background px-2 py-1 hover:bg-muted"
        >
          ← 前のページ
        </a>
      ) : (
        <span />
      )
    }
    <span class="text-xs text-muted-foreground"
      >Page {pageNum} / {Math.max(1, Math.ceil(total / pageSize))}</span
    >
    {
      pageNum * pageSize < total ? (
        <a
          href={`/${pageNum + 1}`}
          class="inline-flex items-center rounded-md border bg-background px-2 py-1 hover:bg-muted"
        >
          次のページ →
        </a>
      ) : (
        <span />
      )
    }
  </nav>
</BaseLayout>
