---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { buildEntryUrl, ymdToDisplay, groupByDateYmd } from "@/lib/dates";
import { normalizeTag } from "@/lib/tags";
import TagBadges from "@/components/TagBadges.astro";

/**
 * 日付別一覧ページ（/posts/YYYYMMDD/）
 * - 同一日のエントリをスラグ順（pNN）に並べて表示
 * - getStaticPaths は全投稿を日付キー（YYYYMMDD）でグルーピング
 */

export async function getStaticPaths() {
  const all = await getCollection("posts");
  const byDate = groupByDateYmd(all);
  return Array.from(byDate.entries()).map(([date, list]) => ({
    params: { date },
    props: { posts: list.toSorted((a, b) => a.slug.localeCompare(b.slug)) },
  }));
}

/** テンプレートに渡される当日エントリ配列 */
const { posts } = Astro.props as {
  posts: Awaited<ReturnType<typeof getCollection>>;
};
/** ルートパラメータ（YYYYMMDD）と表示用日付（YYYY-MM-DD） */
const dateParam = Astro.params.date!;
const displayDate = ymdToDisplay(dateParam);
---
<BaseLayout title={`まちゅダイアリー - ${displayDate}`}>
  <h1 class="mb-4 text-xl font-semibold">{displayDate} のエントリ</h1>
  <ul class="space-y-4">
    {posts.map((entry) => {
      const url = buildEntryUrl(entry.data.date, entry.slug);
      const tags = entry.data.tags ?? [];
      return (
        <li>
          <div class="flex items-center justify-between gap-2">
            <a href={url} class="min-w-0 flex-1 hover:underline">
              <h2 class="truncate font-medium">{entry.data.title}</h2>
            </a>
            {tags.length > 0 && (
              <div class="shrink-0 flex flex-wrap gap-1 justify-end">
                <TagBadges tags={tags} />
              </div>
            )}
          </div>
        </li>
      );
    })}
  </ul>
</BaseLayout>
