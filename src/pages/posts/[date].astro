---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getAllPosts, type PostEntry } from "@/lib/posts";
import { buildEntryUrl, ymdToDisplay, groupByDateYmd } from "@/lib/dates";
import { normalizeTag } from "@/lib/tags";
import TagBadges from "@/components/TagBadges.astro";
import PostCard from "@/components/PostCard.astro";

/**
 * 日付別一覧ページ（/posts/YYYYMMDD/）
 * - 同一日のエントリをスラグ順（pNN）に並べて表示
 * - getStaticPaths は全投稿を日付キー（YYYYMMDD）でグルーピング
 */

export async function getStaticPaths() {
  const all = await getAllPosts();
  const byDate = groupByDateYmd(all);
  return Array.from(byDate.entries()).map(([date, list]) => ({
    params: { date },
    props: { posts: list.toSorted((a, b) => a.slug.localeCompare(b.slug)) },
  }));
}

/** テンプレートに渡される当日エントリ配列 */
const { posts } = Astro.props as { posts: PostEntry[] };
/** ルートパラメータ（YYYYMMDD）と表示用日付（YYYY-MM-DD） */
const dateParam = Astro.params.date!;
const displayDate = ymdToDisplay(dateParam);
---
<BaseLayout title={`まちゅダイアリー - ${displayDate}`}>
  <h1 class="mb-4 text-xl font-semibold">{displayDate} のエントリ</h1>
  <ul class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
    {posts.map((entry) => {
      const url = buildEntryUrl(entry.data.date, entry.slug);
      return (
        <PostCard
          title={entry.data.title}
          url={url}
          dateDisplay={displayDate}
          tags={entry.data.tags ?? []}
          description={entry.data.description}
          image={entry.data.image}
          body={entry.body}
        />
      );
    })}
  </ul>
</BaseLayout>
